buildscript {
   repositories {
      mavenCentral()
   }
   dependencies {
      classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
   }
}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
   imports {
      mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.125'
   }
}

apply plugin: 'java'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
   ext.mainClass = 'de.dominikstiller.vertretungsplan.converter.Converter'
}

repositories {
   mavenCentral()
}

dependencies {
   testCompile group: 'junit', name: 'junit', version: '4.11'
   compile 'com.amazonaws:aws-java-sdk-s3'
   compile 'com.amazonaws:aws-java-sdk-sts'
   compile ('net.sf.ucanaccess:ucanaccess:4.0.2') {
      exclude group: 'org.mockito', module: 'mockito-core'
   }
   compile'commons-dbutils:commons-dbutils:1.6'
   compile (
      'com.fasterxml.jackson.core:jackson-core:2.8.8',
      'com.fasterxml.jackson.core:jackson-databind:2.8.8',
      'com.fasterxml.jackson.core:jackson-annotations:2.8.8',
      'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8'
   )
}

task buildZip(type: Zip) {
   from compileJava
   from processResources {
      exclude 'Dummy.properties'
   }
   into('lib') {
      from configurations.runtime
   }           
}

build.dependsOn buildZip

task deploy(type: Exec) {
   executable = "aws"
   args = ["lambda", "update-function-code", "--function-name", "Vertretungsplan-Converter", "--zip-file", "fileb://build/distributions/Converter.zip", "--profile=cli"]
}